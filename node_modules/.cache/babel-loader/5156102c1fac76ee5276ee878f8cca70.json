{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\New folder (10)\\\\01-starting-project\\\\src\\\\components\\\\Shop\\\\ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from '../../store/cart-slice';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const {\n    id,\n    title,\n    price,\n    description\n  } = props;\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n\n  const addCartHendler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n\n    const existingItem = updatedItems.find(item => item.id === id);\n    console.log(existingItem);\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem\n      }; // new object + copy existing properties to avoid state mutation\n\n      updatedItem.quantity++;\n      updatedItem.totalPrice = updatedItem.totalPrice + price;\n      const existingItemIndex = updatedItems.findIndex(item => item.id === id);\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems\n    };\n    dispatch(cartActions.replaceCart(newCart));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: price.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCartHendler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/New folder (10)/01-starting-project/src/components/Shop/ProductItem.js"],"names":["Card","classes","useDispatch","cartActions","useSelector","ProductItem","props","id","title","price","description","cart","state","dispatch","addCartHendler","newTotalQuantity","totalQuantity","updatedItems","items","slice","existingItem","find","item","console","log","updatedItem","quantity","totalPrice","existingItemIndex","findIndex","push","name","newCart","replaceCart","toFixed","actions"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAoCJ,KAA1C;AACA,QAAMK,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,QAAQ,GAAGX,WAAW,EAA5B;;AACA,QAAMY,cAAc,GAAG,MAAM;AAC3B,UAAMC,gBAAgB,GAAGJ,IAAI,CAACK,aAAL,GAAqB,CAA9C;AACA,UAAMC,YAAY,GAAGN,IAAI,CAACO,KAAL,CAAWC,KAAX,EAArB,CAF2B,CAEc;;AACzC,UAAMC,YAAY,GAAGH,YAAY,CAACI,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACf,EAAL,KAAYA,EAAxC,CAArB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AACA,QAAIA,YAAJ,EAAkB;AAChB,YAAMK,WAAW,GAAG,EAAE,GAAGL;AAAL,OAApB,CADgB,CACyB;;AACzCK,MAAAA,WAAW,CAACC,QAAZ;AACAD,MAAAA,WAAW,CAACE,UAAZ,GAAyBF,WAAW,CAACE,UAAZ,GAAyBlB,KAAlD;AACA,YAAMmB,iBAAiB,GAAGX,YAAY,CAACY,SAAb,CACvBP,IAAD,IAAUA,IAAI,CAACf,EAAL,KAAYA,EADE,CAA1B;AAGAU,MAAAA,YAAY,CAACW,iBAAD,CAAZ,GAAkCH,WAAlC;AACD,KARD,MAQO;AACLR,MAAAA,YAAY,CAACa,IAAb,CAAkB;AAChBvB,QAAAA,EAAE,EAAEA,EADY;AAEhBE,QAAAA,KAAK,EAAEA,KAFS;AAGhBiB,QAAAA,QAAQ,EAAE,CAHM;AAIhBC,QAAAA,UAAU,EAAElB,KAJI;AAKhBsB,QAAAA,IAAI,EAAEvB;AALU,OAAlB;AAOD;;AAED,UAAMwB,OAAO,GAAG;AACdhB,MAAAA,aAAa,EAAED,gBADD;AAEdG,MAAAA,KAAK,EAAED;AAFO,KAAhB;AAKAJ,IAAAA,QAAQ,CAACV,WAAW,CAAC8B,WAAZ,CAAwBD,OAAxB,CAAD,CAAR;AACD,GA7BD;;AAgCA,sBACE;AAAI,IAAA,SAAS,EAAE/B,OAAO,CAACqB,IAAvB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAKd;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACQ,KAAxB;AAAA,oBAAgCA,KAAK,CAACyB,OAAN,CAAc,CAAd;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIxB;AAAJ;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAET,OAAO,CAACkC,OAAxB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAErB,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlDD;;GAAMT,W;UAESD,W,EACIF,W;;;KAHbG,W;AAoDN,eAAeA,WAAf","sourcesContent":["import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from \"react-redux\"\nimport { cartActions } from '../../store/cart-slice';\nimport { useSelector } from 'react-redux'\n\nconst ProductItem = (props) => {\n  const { id, title, price, description } = props;\n  const cart = useSelector(state => state.cart)\n  const dispatch = useDispatch()\n  const addCartHendler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n    const existingItem = updatedItems.find((item) => item.id === id);\n    console.log(existingItem)\n    if (existingItem) {\n      const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n      updatedItem.quantity++;\n      updatedItem.totalPrice = updatedItem.totalPrice + price;\n      const existingItemIndex = updatedItems.findIndex(\n        (item) => item.id === id\n      );\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title,\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems,\n    };\n\n    dispatch(cartActions.replaceCart(newCart));\n  };\n\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>{price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addCartHendler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}