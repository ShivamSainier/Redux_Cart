{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\New folder (10)\\\\01-starting-project\\\\src\\\\components\\\\Shop\\\\ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from '../../store/cart-slice';\nimport { useSelector } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const {\n    id,\n    title,\n    price,\n    description\n  } = props;\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n\n  const addCartHendler = () => {\n    dispatch(cartActions.addItemsToCart({\n      id,\n      title,\n      price\n    }));\n  };\n\n  const addItemToCartHendler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updateItem = cart.items.slice();\n    const existingItem = updateItem.find(item => item.id == id);\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem\n      };\n      updatedItem.quantity++;\n      updatedItem.price = updatedItem.price + price;\n      const existingItemIndex = updatedItem.findIndex(item => item.id == id);\n      updatedItem[existingItemIndex] = updatedItem;\n    } else {\n      updtedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title\n      });\n    }\n  };\n\n  const newCart = {\n    totalQuantity: newTotoalQuantity,\n    items: updatedItem\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: price.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCartHendler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/New folder (10)/01-starting-project/src/components/Shop/ProductItem.js"],"names":["Card","classes","useDispatch","cartActions","useSelector","ProductItem","props","id","title","price","description","cart","state","dispatch","addCartHendler","addItemsToCart","addItemToCartHendler","newTotalQuantity","totalQuantity","updateItem","items","slice","existingItem","find","item","updatedItem","quantity","existingItemIndex","findIndex","updtedItems","push","totalPrice","name","newCart","newTotoalQuantity","toFixed","actions"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,WAAR,QAA0B,OAA1B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,EAAF;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAmCJ,KAAzC;AACA,QAAMK,IAAI,GAACP,WAAW,CAACQ,KAAK,IAAEA,KAAK,CAACD,IAAd,CAAtB;AACA,QAAME,QAAQ,GAACX,WAAW,EAA1B;;AAEA,QAAMY,cAAc,GAAC,MAAI;AACvBD,IAAAA,QAAQ,CAACV,WAAW,CAACY,cAAZ,CAA2B;AAClCR,MAAAA,EADkC;AAElCC,MAAAA,KAFkC;AAGlCC,MAAAA;AAHkC,KAA3B,CAAD,CAAR;AAKD,GAND;;AAQA,QAAMO,oBAAoB,GAAC,MAAI;AAC7B,UAAMC,gBAAgB,GAACN,IAAI,CAACO,aAAL,GAAmB,CAA1C;AACA,UAAMC,UAAU,GAACR,IAAI,CAACS,KAAL,CAAWC,KAAX,EAAjB;AACA,UAAMC,YAAY,GAACH,UAAU,CAACI,IAAX,CAAiBC,IAAD,IAAQA,IAAI,CAACjB,EAAL,IAASA,EAAjC,CAAnB;;AACA,QAAGe,YAAH,EAAgB;AACd,YAAMG,WAAW,GAAC,EAAC,GAAGH;AAAJ,OAAlB;AACAG,MAAAA,WAAW,CAACC,QAAZ;AACAD,MAAAA,WAAW,CAAChB,KAAZ,GAAkBgB,WAAW,CAAChB,KAAZ,GAAkBA,KAApC;AACA,YAAMkB,iBAAiB,GAACF,WAAW,CAACG,SAAZ,CAAsBJ,IAAI,IAAEA,IAAI,CAACjB,EAAL,IAASA,EAArC,CAAxB;AACAkB,MAAAA,WAAW,CAACE,iBAAD,CAAX,GAAgCF,WAAhC;AACD,KAND,MAMK;AACHI,MAAAA,WAAW,CAACC,IAAZ,CAAiB;AACfvB,QAAAA,EAAE,EAACA,EADY;AACRE,QAAAA,KAAK,EAACA,KADE;AACIiB,QAAAA,QAAQ,EAAC,CADb;AACeK,QAAAA,UAAU,EAACtB,KAD1B;AACgCuB,QAAAA,IAAI,EAACxB;AADrC,OAAjB;AAGD;AACF,GAfD;;AAgBA,QAAMyB,OAAO,GAAC;AACZf,IAAAA,aAAa,EAACgB,iBADF;AAEZd,IAAAA,KAAK,EAACK;AAFM,GAAd;AAKA,sBACE;AAAI,IAAA,SAAS,EAAExB,OAAO,CAACuB,IAAvB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACQ,KAAxB;AAAA,oBAAgCA,KAAK,CAAC0B,OAAN,CAAc,CAAd;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIzB;AAAJ;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAET,OAAO,CAACmC,OAAxB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEtB,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhDD;;GAAMT,W;UAEOD,W,EACIF,W;;;KAHXG,W;AAkDN,eAAeA,WAAf","sourcesContent":["import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport {useDispatch} from \"react-redux\"\nimport { cartActions } from '../../store/cart-slice';\nimport {useSelector} from 'react'\n\nconst ProductItem = (props) => {\n  const { id,title, price, description } = props;\n  const cart=useSelector(state=>state.cart)\n  const dispatch=useDispatch()\n  \n  const addCartHendler=()=>{\n    dispatch(cartActions.addItemsToCart({\n      id,\n      title,\n      price\n    }))\n  };\n\n  const addItemToCartHendler=()=>{\n    const newTotalQuantity=cart.totalQuantity+1\n    const updateItem=cart.items.slice()\n    const existingItem=updateItem.find((item)=>item.id==id)\n    if(existingItem){\n      const updatedItem={...existingItem}\n      updatedItem.quantity++;\n      updatedItem.price=updatedItem.price+price;\n      const existingItemIndex=updatedItem.findIndex(item=>item.id==id)\n      updatedItem[existingItemIndex]= updatedItem;\n    }else{\n      updtedItems.push({\n        id:id, price:price,quantity:1,totalPrice:price,name:title\n      })\n    }\n  }\n  const newCart={\n    totalQuantity:newTotoalQuantity,\n    items:updatedItem,\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>{price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addCartHendler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}