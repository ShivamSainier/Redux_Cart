{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    notification: null\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemsToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      console.log(existingItem);\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          title: newItem.title,\n          quantity: 1\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemsFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"sources":["C:/Users/hp/Desktop/New folder (10)/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","notification","reducers","replaceCart","state","action","payload","addItemsToCart","newItem","existingItem","find","item","id","console","log","push","price","totalPrice","title","quantity","removeItemsFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE,CAFL;AAGVC,IAAAA,YAAY,EAAC;AAHH,GAFY;AAO1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAOC,MAAP,EAAc;AACrBD,MAAAA,KAAK,CAACJ,aAAN,GAAoBK,MAAM,CAACC,OAAP,CAAeN,aAAnC;AACAI,MAAAA,KAAK,CAACL,KAAN,GAAYM,MAAM,CAACC,OAAP,CAAeP,KAA3B;AACH,KAJK;;AAKNQ,IAAAA,cAAc,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA7C,CAArB;AACAR,MAAAA,KAAK,CAACJ,aAAN;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;;AACA,UAAI,CAACA,YAAL,EAAmB;AACfL,QAAAA,KAAK,CAACL,KAAN,CAAYgB,IAAZ,CAAiB;AAAEH,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EAAd;AAAkBI,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAAjC;AAAwCC,UAAAA,UAAU,EAAET,OAAO,CAACQ,KAA5D;AAAmEE,UAAAA,KAAK,EAAEV,OAAO,CAACU,KAAlF;AAAyFC,UAAAA,QAAQ,EAAE;AAAnG,SAAjB;AACH,OAFD,MAGK;AACDV,QAAAA,YAAY,CAACU,QAAb;AACAV,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BT,OAAO,CAACQ,KAA5D;AACH;AACJ,KAjBK;;AAkBNI,IAAAA,mBAAmB,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AAC/B,YAAMO,EAAE,GAAGP,MAAM,CAACC,OAAlB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAR,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAIS,YAAY,CAACU,QAAb,KAA0B,CAA9B,EAAiC;AAC7Bf,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYsB,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAGK;AACDH,QAAAA,YAAY,CAACU,QAAb;AACAV,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACO,KAAjE;AACH;AACJ;;AA7BK;AAPgB,CAAD,CAA7B;AAuCA,eAAepB,SAAf;AACA,OAAO,MAAM0B,WAAW,GAAG1B,SAAS,CAAC2B,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        notification:null\r\n    },\r\n    reducers: {\r\n        replaceCart(state,action){\r\n            state.totalQuantity=action.payload.totalQuantity\r\n            state.items=action.payload.items;\r\n        },\r\n        addItemsToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            console.log(existingItem)\r\n            if (!existingItem) {\r\n                state.items.push({ id: newItem.id, price: newItem.price, totalPrice: newItem.price, title: newItem.title, quantity: 1 });\r\n            }\r\n            else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeItemsFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            }\r\n            else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\nexport default cartSlice;\r\nexport const cartActions = cartSlice.actions;"]},"metadata":{},"sourceType":"module"}