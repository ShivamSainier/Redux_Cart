{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemsToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          title: newItem.title,\n          quantity: newItem.quantity\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.newItem.price;\n      }\n    },\n\n    removeItemsFromCart(state, action) {\n      const id = action.payload.id;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"sources":["C:/Users/hp/Desktop/New folder (10)/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemsToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","totalPrice","title","quantity","removeItemsFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE;AAFL,GAFY;AAM1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAI,CAACO,YAAL,EAAmB;AACfJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AAAEC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EAAlB;AAAsBG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAArC;AAA4CC,UAAAA,UAAU,EAAET,OAAO,CAACQ,KAAhE;AAAsEE,UAAAA,KAAK,EAACV,OAAO,CAACU,KAApF;AAA0FC,UAAAA,QAAQ,EAACX,OAAO,CAACW;AAA3G,SAAjB;AACH,OAFD,MAGK;AACDT,QAAAA,YAAY,CAACS,QAAb,GAAwBT,YAAY,CAACS,QAAb,GAAwB,CAAhD;AACAT,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACF,OAAb,CAAqBQ,KAA/C;AACH;AACJ,KAZK;;AAaNI,IAAAA,mBAAmB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC/B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAP,CAAeI,EAA1B;AACA,YAAMH,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;;AACA,UAAIH,YAAY,CAACS,QAAb,KAA0B,CAA9B,EAAiC;AAC7Bb,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAGK;AACDH,QAAAA,YAAY,CAACS,QAAb;AACAT,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACM,KAAvC;AACH;AACJ;;AAvBK;AANgB,CAAD,CAA7B;AAgCA,eAAejB,SAAf;AACA,OAAO,MAAMuB,WAAW,GAAGvB,SAAS,CAACwB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0\r\n    },\r\n    reducers: {\r\n        addItemsToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            if (!existingItem) {\r\n                state.items.push({ itemId: newItem.id, price: newItem.price, totalPrice: newItem.price,title:newItem.title,quantity:newItem.quantity });\r\n            }\r\n            else {\r\n                existingItem.quantity = existingItem.quantity + 1;\r\n                existingItem.totalPrice = existingItem.newItem.price\r\n            }\r\n        },\r\n        removeItemsFromCart(state, action) {\r\n            const id = action.payload.id;\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            }\r\n            else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\nexport default cartSlice;\r\nexport const cartActions = cartSlice.actions;"]},"metadata":{},"sourceType":"module"}