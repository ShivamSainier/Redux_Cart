{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemsToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cart.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      console.log(existingItem);\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          title: newItem.title,\n          quantity: newItem.quantity\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.newItem.price;\n      }\n    },\n\n    removeItemsFromCart(state, action) {\n      const id = action.payload.id;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"sources":["C:/Users/hp/Desktop/New folder (10)/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemsToCart","state","action","newItem","payload","existingItem","cart","find","item","id","console","log","push","price","totalPrice","title","quantity","removeItemsFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE;AAFL,GAFY;AAM1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAN,CAAWT,KAAX,CAAiBU,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAAlD,CAArB;AACAR,MAAAA,KAAK,CAACH,aAAN;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;;AACA,UAAI,CAACA,YAAL,EAAmB;AACfJ,QAAAA,KAAK,CAACJ,KAAN,CAAYe,IAAZ,CAAiB;AAAEH,UAAAA,EAAE,EAAEN,OAAO,CAACM,EAAd;AAAkBI,UAAAA,KAAK,EAAEV,OAAO,CAACU,KAAjC;AAAwCC,UAAAA,UAAU,EAAEX,OAAO,CAACU,KAA5D;AAAkEE,UAAAA,KAAK,EAACZ,OAAO,CAACY,KAAhF;AAAsFC,UAAAA,QAAQ,EAACb,OAAO,CAACa;AAAvG,SAAjB;AACH,OAFD,MAGK;AACDX,QAAAA,YAAY,CAACW,QAAb;AACAX,QAAAA,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACF,OAAb,CAAqBU,KAA/C;AACH;AACJ,KAbK;;AAcNI,IAAAA,mBAAmB,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AAC/B,YAAMO,EAAE,GAAGP,MAAM,CAACE,OAAP,CAAeK,EAA1B;AACA,YAAMJ,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;;AACA,UAAIJ,YAAY,CAACW,QAAb,KAA0B,CAA9B,EAAiC;AAC7Bf,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYqB,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAGK;AACDJ,QAAAA,YAAY,CAACW,QAAb;AACAX,QAAAA,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACQ,KAAvC;AACH;AACJ;;AAxBK;AANgB,CAAD,CAA7B;AAiCA,eAAenB,SAAf;AACA,OAAO,MAAMyB,WAAW,GAAGzB,SAAS,CAAC0B,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0\r\n    },\r\n    reducers: {\r\n        addItemsToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.cart.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            console.log(existingItem)\r\n            if (!existingItem) {\r\n                state.items.push({ id: newItem.id, price: newItem.price, totalPrice: newItem.price,title:newItem.title,quantity:newItem.quantity }) ;\r\n            }\r\n            else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.newItem.price\r\n            }\r\n        },\r\n        removeItemsFromCart(state, action) {\r\n            const id = action.payload.id;\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            }\r\n            else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\nexport default cartSlice;\r\nexport const cartActions = cartSlice.actions;"]},"metadata":{},"sourceType":"module"}