{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\New folder (10)\\\\01-starting-project\\\\src\\\\components\\\\Shop\\\\ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from '../../store/cart-slice';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const {\n    id,\n    title,\n    price,\n    description\n  } = props;\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n\n  const addCartHendler = () => {\n    const addItemToCartHendler = () => {\n      const newTotalQuantity = cart.totalQuantity + 1;\n      const updateItem = cart.items.slice();\n      const existingItem = updateItem.find(item => item.id == id);\n\n      if (existingItem) {\n        const updatedItem = { ...existingItem\n        };\n        updatedItem.quantity++;\n        updatedItem.price = updatedItem.price + price;\n        const existingItemIndex = updatedItem.findIndex(item => item.id == id);\n        updatedItem[existingItemIndex] = updatedItem;\n      } else {\n        updatedItem.push({\n          id: id,\n          price: price,\n          quantity: 1,\n          totalPrice: price,\n          name: title\n        });\n      }\n    };\n\n    const newCart = {\n      totalQuantity: newTotoalQuantity,\n      items: updatedItem\n    };\n    dispatch(cartActions.addItemsToCart({\n      id,\n      title,\n      price\n    }));\n    dispatch(cartActions.replaceCart(newCart));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: price.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCartHendler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/New folder (10)/01-starting-project/src/components/Shop/ProductItem.js"],"names":["Card","classes","useDispatch","cartActions","useSelector","ProductItem","props","id","title","price","description","cart","state","dispatch","addCartHendler","addItemToCartHendler","newTotalQuantity","totalQuantity","updateItem","items","slice","existingItem","find","item","updatedItem","quantity","existingItemIndex","findIndex","push","totalPrice","name","newCart","newTotoalQuantity","addItemsToCart","replaceCart","toFixed","actions"],"mappings":"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","sourcesContent":["import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport {useDispatch} from \"react-redux\"\nimport { cartActions } from '../../store/cart-slice';\nimport {useSelector} from 'react-redux'\n\nconst ProductItem = (props) => {\n  const { id,title, price, description } = props;\n  const cart=useSelector(state=>state.cart)\n  const dispatch=useDispatch()\n  \n  \n\n  \n  const addCartHendler=()=>{\n    const addItemToCartHendler=()=>{\n      const newTotalQuantity=cart.totalQuantity+1\n      const updateItem=cart.items.slice()\n      const existingItem=updateItem.find((item)=>item.id==id)\n      if(existingItem){\n        const updatedItem={...existingItem}\n        updatedItem.quantity++;\n        updatedItem.price=updatedItem.price+price;\n        const existingItemIndex=updatedItem.findIndex(item=>item.id==id)\n        updatedItem[existingItemIndex]= updatedItem;\n      }else{\n        updatedItem.push({\n          id:id, price:price,quantity:1,totalPrice:price,name:title\n        })\n      }\n    }\n    const newCart={\n      totalQuantity:newTotoalQuantity,\n      items:updatedItem,\n    }\n    dispatch(cartActions.addItemsToCart({\n      id,\n      title,\n      price\n    }))\n    dispatch(cartActions.replaceCart(newCart))\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>{price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addCartHendler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}